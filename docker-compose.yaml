services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}           # ← Переменные окружения
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password123}
      POSTGRES_DB: ${POSTGRES_DB:-lms_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    networks:
      - app-network

  django:
    build: .
    container_name: django
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env  # ← .env с реальными секретами (НЕ в репозитории)
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    networks:
      - app-network
    expose:
      - 8000

  celery:
    build: .
    container_name: celery
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    command: celery -A config worker --loglevel=INFO
    env_file:
      - .env  # ← .env с реальными секретами
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    networks:
      - app-network

  celery-beat:
    build: .
    container_name: celery-beat
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    command: celery -A config beat --loglevel=INFO
    env_file:
      - .env  # ← .env с реальными секретами
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    networks:
      - app-network

  nginx:
    image: nginx:1.25-alpine
    container_name: nginx
    restart: unless-stopped
    depends_on:
      - django
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/static
      - media_volume:/app/media
    networks:
      - app-network

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  app-network:
    driver: bridge